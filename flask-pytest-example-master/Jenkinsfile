pipeline {
    agent any
    stages {
        stage('Clone Git repo') {
        steps {
            git branch: 'main', url: 'https://github.com/Kinamori/projet-poei.git'
              }
        }
        
        stage('Test : pytest'){        
        steps {
                sh '''
                    cd flask-pytest-example-master
                    pip3 install -r requirements.txt
                    pytest
                '''
          }
        }

    stage('Analyse code : Sonarqube') {
    steps {
    script {
       def scannerHome = tool 'Sonarqube Scanner';
           withSonarQubeEnv('Sonarqube'){
           sh " ${tool("Sonarqube Scanner")}/bin/sonar-scanner \
           -Dsonar.projectKey=projet_pipeline \
           -Dsonar.sources=. \
           -Dsonar.css.node=. \
           -Dsonar.host.url=http://172.19.0.2:9000 \
           -Dsonar.login=933f34d817d7ef4b8b87944525c17b02c74d3743"
               }
    }
           }
    }
    
        stage('Store Artefact : nexus'){        
        steps {
                sh '''
                    tar -czvf archive$BUILD_NUMBER.tar.gz /var/jenkins_home/workspace/projet_pipeline
                    rm -f /var/jenkins_home/workspace/projet_pipeline/archive*.tar.gz
                    curl -v -u admin:root --upload-file /var/jenkins_home/workspace/projet_pipeline/archive$BUILD_NUMBER.tar.gz http://172.19.0.3:8081/repository/projet_pipeline/
                '''
          }

    }
}  
}
